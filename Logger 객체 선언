1.로그를 남기려는 클래스에 로거 객체를 필드로 선언한다.
예시) private static final Logger LOGGER = LoggerFactory.getLogger(FtpController.class);

2.logger가 가지고 있는 다섯 가지 메서드 trace, debug, info, warn, error를 이용하여 로그를 출력하면 된다.
예시>LOGGER.info("RESULT:"+resultVO.toString());

3.컨트롤러 메서드가 실행될 때마다 로그가 출력되게 하기 위한 LoggerInterceptor.
* 인터셉터는 DispatcherServlet에서 Handler로 요청을 보낼 때, Handler에서 DispatcherServlet로 응답을 보낼 때 동작을 하게 되는 것이다.
  인터셉터로 컨트롤러 실행 전과 후에 공통 로직을 처리할 수 있다.

작성 방법
  org.springframework.web.servlet.HandlerInterceptor 인터페이스를 구현한다.(LoggerInterceptor로 구현되어있음)
  org.springframework.web.servlet.handler.HandlerInterceptorAdapter 클래스를 상속받는다.
  xml 설정을 사용한다면, <mvc:interceptors> 요소에 인터셉터를 등록한다.
  quadmax-servlet.xml
  *	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*.do"/>
			<bean id="loggerInterceptor" class="com.ecs.quadmax.interceptor.LoggerInterceptor"></bean>
		</mvc:interceptor>
	
                 
